#!/bin/bash

# Limpar todos os processos existentes primeiro
echo "üßπ Limpando processos existentes..."
pkill -f "next dev" 2>/dev/null
pkill -f "next-server" 2>/dev/null
pkill -f "serveo.net" 2>/dev/null
pkill -f "npm run dev" 2>/dev/null
sleep 2
echo "‚úÖ Processos limpos!"
echo ""

# Serveo tunnel - URL ser√° exibido ap√≥s conectar
echo "üöÄ Iniciando servidor de desenvolvimento..."
echo "üìç Local: http://localhost:3000"
echo ""

# Fun√ß√£o para cleanup quando o script for interrompido
cleanup() {
    echo ""
    echo "üõë Parando servi√ßos..."
    pkill -f "next dev" 2>/dev/null
    pkill -f "serveo.net" 2>/dev/null
    exit 0
}

# Capturar sinais de interrup√ß√£o
trap cleanup SIGINT SIGTERM

# Iniciar Next.js em background
npm run dev &
DEV_PID=$!

# Aguardar o servidor iniciar
sleep 3

# Verificar se o servidor est√° rodando na porta 3000 ou 3001
if curl -s http://localhost:3000 >/dev/null 2>&1; then
    PORT=3000
elif curl -s http://localhost:3001 >/dev/null 2>&1; then
    PORT=3001
else
    echo "‚ùå Erro: Servidor n√£o iniciou corretamente"
    exit 1
fi

echo "‚úÖ Servidor rodando na porta $PORT"

# Iniciar tunnel Serveo
echo "üîó Criando tunnel Serveo..."
ssh -R 80:localhost:$PORT serveo.net > /tmp/serveo_output.txt 2>&1 &
TUNNEL_PID=$!

# Aguardar tunnel conectar
sleep 8

# Extrair URL do Serveo
sleep 2  # Aguardar arquivo ser escrito
SERVEO_URL=$(grep -o 'https://[a-zA-Z0-9]*\.serveo\.net' /tmp/serveo_output.txt | head -1)
if [ -z "$SERVEO_URL" ]; then
    echo "‚ùå Erro: N√£o foi poss√≠vel obter URL do Serveo"
    exit 1
fi

echo ""
echo "================================"
echo "üéâ PRONTO PARA DESENVOLVIMENTO!"
echo "================================"
echo "üìç Local:   http://localhost:$PORT"
echo "üåê Tunnel:  $SERVEO_URL"
echo ""
echo "üîß CONFIGURA√á√ÉO GOOGLE OAUTH:"
echo "üìù Adicione estas URLs no Google Cloud Console:"
echo ""
echo "   ORIGENS JAVASCRIPT AUTORIZADAS:"
echo "   ‚ûú $SERVEO_URL"
echo ""
echo "   URIS DE REDIRECIONAMENTO AUTORIZADOS:"
echo "   ‚ûú $SERVEO_URL/__/auth/handler"
echo ""
echo "================================"
echo ""
echo "Pressione Ctrl+C para parar todos os servi√ßos"

# Aguardar os processos
wait $DEV_PID $TUNNEL_PID